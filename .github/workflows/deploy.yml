# name: CI/CD
# on:
#   push:
#   pull_request:
#     branches: [ main ]

# jobs:
#   verify-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Install Podman
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y podman

#       - name: Login to GitHub Container Registry
#         run: |
#           echo "${{ secrets.PACKAGES_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

#       - name: Build Podman image
#         run: |
#           podman build \
#             -t ghcr.io/${{ github.repository }}:${{ github.sha }} .

#       - name: Push Podman image
#         if: github.ref == 'refs/heads/main'
#         run: |
#           podman tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
#           podman push ghcr.io/${{ github.repository }}:${{ github.sha }}
#           podman push ghcr.io/${{ github.repository }}:latest

#       - name: Install Vercel CLI
#         if: github.ref == 'refs/heads/main'
#         run: npm install --global vercel@latest

#       - name: Pull Vercel Environment Information
#         if: github.ref == 'refs/heads/main'
#         run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

#       - name: Build Project Artifacts
#         if: github.ref == 'refs/heads/main'
#         run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

name: CI/CD
on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  verify-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - uses: actions/checkout@v3

      # Step 2: Install Podman
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      # Step 3: Log in to Docker Hub
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | podman login docker.io -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Step 4: Build Podman image
      - name: Build Podman image
        run: |
          podman build \
            -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} .

      # Step 5: Push Podman image to Docker Hub
      - name: Push Podman image
        if: github.ref == 'refs/heads/main'
        run: |
          podman tag docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest
          podman push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}
          podman push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

      # Step 6: Install Vercel CLI
      - name: Install Vercel CLI
        if: github.ref == 'refs/heads/main'
        run: npm install --global vercel@latest

      # Step 7: Pull Vercel Environment Information
      - name: Pull Vercel Environment Information
        if: github.ref == 'refs/heads/main'
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Step 8: Build Project Artifacts
      - name: Build Project Artifacts
        if: github.ref == 'refs/heads/main'
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Step 9: Deploy to Vercel
      - name: Deploy to Vercel
        if: github.ref == 'refs/heads/main'
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
